% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_cross_section.R
\name{convert_cross_section}
\alias{convert_cross_section}
\title{Converting Cross-section data method}
\usage{
convert_cross_section(params, reference_geo_code = "US-CA", zero_replace = 0.1)
}
\arguments{
\item{params}{A list containing parameters including logger, folder_name, data_format, time_window, and other necessary parameters for sub-functions.}

\item{reference_geo_code}{Same as the reference_geo from time_series(). If any other is used, then the result will not be accurate}

\item{zero_replace}{Same as zero_replace from concat_time_series(). It is highly recommended to use the same to avoid incosistent results.}
}
\description{
Converting Cross-section data method
}
\details{
This final method will rescale the cross section data based on the concatenated time series data.
This will finally provide the accurate google trends index for each region/country/city over the provided time period.
}
\examples{
\donttest{
# Please note that this example may take a few minutes to run
# Create a temporary folder for the example

# Ensure the temporary folder is cleaned up after the example
# Run the function with the temporary folder
params <- initialize_request_trends(
  keyword = "Joe Biden",
  topic = "/m/012gx2",
  folder_name = file.path(tempdir(), "biden_save"),
  start_date = "2024-05-01",
  end_date = "2024-05-03",
  data_format = "daily"
)
cross_section_success <- TRUE
time_series_success <- TRUE

# Run the cross_section function and handle potential errors
tryCatch({
  cross_section(params, geo = "US", resolution = "REGION")
}, pytrends.exceptions.TooManyRequestsError = function(e) {
  message("Too many requests error in cross_section: ", conditionMessage(e))
  cross_section_success <- FALSE # Indicate failure
})

# Run the time_series function and handle potential errors
tryCatch({
  time_series(params, reference_geo_code = "US-CA")
}, pytrends.exceptions.TooManyRequestsError = function(e) {
  message("Too many requests error in time_series: ", conditionMessage(e))
  time_series_success <- FALSE # Indicate failure
})

data_dir_time <- file.path("biden_save", "weekly", "over_time", "US-CA")
data_dir_region <- file.path("biden_save", "weekly", "by_region")

# Conditionally run convert_cross_section only if both functions succeeded
if (cross_section_success && time_series_success && length(list.files(data_dir_time)) > 0
&& length(list.files(data_dir_region)) > 0) {
  convert_cross_section(params, reference_geo_code = "US-CA")
} else {
  message("Skipping convert_cross_section due to previous errors.")
  result <- FALSE
}

# Clean up temporary directory
on.exit(unlink("biden_save", recursive = TRUE))
}
}
